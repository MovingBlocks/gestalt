// Copyright 2021 The Terasology Foundation
// SPDX-License-Identifier: Apache-2.0
import org.reflections.Reflections
import org.reflections.scanners.ResourcesScanner
import org.reflections.scanners.SubTypesScanner
import org.reflections.scanners.TypeAnnotationsScanner
import org.reflections.serializers.JsonSerializer

apply plugin: 'java'

dependencies {
    implementation project(":testpack:testpack-api")
}

def reflect() {
    def resourcesPath = sourceSets.find { it.name == 'main' }.resources.srcDirs
    def classPath = files { compileJava.destinationDir }
    URL[] scanUrls = classPath.collect { it.toURI().toURL() } + resourcesPath.collect {
        it.toURI().toURL()
    }
    URL[] classLoaderUrls = scanUrls + compileJava.classpath.collect { it.toURI().toURL() }

    ClassLoader classLoader = new URLClassLoader(classLoaderUrls, getClass().getClassLoader())
    org.reflections.Configuration config = new org.reflections.util.ConfigurationBuilder()
    config.addClassLoader(classLoader)
    config.setUrls(scanUrls)

    config.addScanners(new ResourcesScanner(), new SubTypesScanner(false), new TypeAnnotationsScanner().filterResultsBy())
    Reflections reflections = new Reflections(config)
    JsonSerializer serializer = new JsonSerializer()
    def outPath = compileJava.destinationDir.toString() + "/manifest.json"
    serializer.save(reflections, outPath)
}

compileJava.doLast {
    reflect()
}
