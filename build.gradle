buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        //Spotbugs
        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.0.0"
    }
}

// Needed for extending the "clean" task to also delete custom stuff defined here like analytics config
apply plugin: 'base'

ext {
    dirAnalyticsConfig = 'gradle/analytics'
}

// Define configurations for analytics config
configurations {
    codeAnalyticsConfig
}

dependencies {
    // Config for our code analytics lives in a centralized repo: https://github.com/MovingBlocks/TeraConfig
    codeAnalyticsConfig group: 'org.terasology.config', name: 'codemetrics', version: '1.3.2', ext: 'zip'
}

task extractAnalyticsConfig(type: Copy) {
    description = "Extracts configuration files for our analytics from the zip we fetched as a dependency"
    from {
        configurations.codeAnalyticsConfig.collect {
            zipTree(it)
        }
    }
    into "$rootDir/$dirAnalyticsConfig"
}

// Include deletion of extracted stuff in the global clean task. Without the doLast it runs on *every* execution ...
clean.doLast {
    new File(dirAnalyticsConfig).deleteDir()
    println "Cleaned root - don't forget to re-extract stuff! 'gradlew extractAnalyticsConfig' will do so"
}

allprojects {
    apply plugin: 'idea'
    
    // Declare remote repositories we're interested in - library files will be fetched from here
    repositories {
        // Main Maven repo
        mavenCentral()
        maven {
            name "Terasology Artifactory"
            url "http://artifactory.terasology.org/artifactory/virtual-repo-live"
            allowInsecureProtocol true  // ðŸ˜±
        }
    }
}

//configure(subprojects.findAll { !it.name.contains("testpack") && !it.name.startsWith("module") }) {
subprojects {
    apply from: "$rootDir/gradle/common.gradle"
}

// Library and distribution config
description = 'A set of libraries providing core capabilities for games and game engines'
