// Copyright 2021 The Terasology Foundation
// SPDX-License-Identifier: Apache-2.0
buildscript {
    repositories {
        google()
        mavenCentral()
        // org.jetbrains.trove4j:trove4j
        gradlePluginPortal()
        maven {
            url 'https://heisluft.de/maven'
        }
        maven {
            name = "Terasology Artifactory"
            url = "https://artifactory.terasology.io/artifactory/libs-release-local"
        }

    }
    dependencies {
        classpath 'org.terasology:reflections:0.9.12-MB' // This goes away in v8
        classpath 'com.android.tools.build:gradle:7.4.1'
    }
}

ext {
    // Android version support
    android_annotation_version = "28.0.0"

    // Standard Utility
    guava_version = "31.1-android"
    slf4j_version = "1.7.36"
    gson_version = "2.9.0"
    jcip_annotation_version = "1.0"

    // Testing
    junit_version = "4.13.2"
    jupiter_version = "5.8.2"
    logback_version = "1.2.9"
    mockito_version = "3.9.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()

        // Terasology Artifactory instance for libs not readily available elsewhere plus our own libs
        maven {
            def repoViaEnv = System.getenv()["RESOLUTION_REPO"]
            if (rootProject.hasProperty("alternativeResolutionRepo")) {
                // If the user supplies an alternative repo via gradle.properties then use that
                name "from alternativeResolutionRepo property"
                url alternativeResolutionRepo
            } else if (repoViaEnv != null && repoViaEnv != "") {
                name "from \$RESOLUTION_REPO"
                url = repoViaEnv
            } else {
                // Our default is the main virtual repo containing everything except repos for testing Artifactory itself
                name "Terasology Artifactory"
                url "https://artifactory.terasology.io/artifactory/virtual-repo-live"
            }
        }

        // SemVer lib
        maven {
            url 'https://heisluft.de/maven'
        }
    }
}

// Library and distribution config
description = 'A set of libraries providing core capabilities for games and game engines'

task clean(type: Delete) {
    delete rootProject.buildDir
}
