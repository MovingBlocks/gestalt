/*
 * Copyright 2019 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    maven {
        url "http://artifactory.terasology.org/artifactory/virtual-repo-live"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':gestalt-module')
    implementation project(':gestalt-util')
    implementation 'org.slf4j:slf4j-api:1.7.25'

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


// Artifactory publishing details
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.7.3')
    }
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

// A configuration for publishing artifacts
configurations {
    published
}

publishing {
    publications {
        aar(MavenPublication) {
            artifact("$buildDir/outputs/aar/${project.name}-release.aar")
        }
    }
}

// This configures what we need to interact with the Terasology Artifactory instance. It is primarily for local test publishing
// Artifactory config in Jenkins can supply overrides for the following
artifactory {
    contextUrl = 'http://artifactory.terasology.org/artifactory'

    // This is the target for publishing artifacts. Unless testing locally usually the setting in Jenkins is used
    publish {
        repository {
            // The repoKey can be overridden in Jenkins and via local gradle.properties if desired for testing
            if (rootProject.hasProperty("artifactoryPublishRepo")) {
                repoKey = artifactoryPublishRepo
            } else {
                repoKey = 'terasology-snapshot-local'
            }

            // User and pass are overridden in Jenkins. You can supply your own for manual use in a local prop file, such as gradle.properties
            // This way we make it so you can run locally without having the user/pass set - but if the artifactoryPublish task is called it'll fail
            if (rootProject.hasProperty("artifactoryUser") && rootProject.hasProperty("artifactoryPass")) {
                username = "$artifactoryUser"
                password = "$artifactoryPass"
            }
            // Note that republishing artifacts under the same name (without an incremented SNAPSHOT for instance) may fail with "Forbidden"
        }

        defaults {
            publications('aar')
            publishArtifacts = true
        }
    }
}
