// Copyright 2021 The Terasology Foundation
// SPDX-License-Identifier: Apache-2.0

/*
 * This is a Gradle build file:
 * - Gradle Homepage: http://gradle.org/
 * - Gradle Documentation: http://gradle.org/documentation
 * - View tasks for this project: $ gradlew tasks
 */

apply plugin: 'java-library'
apply plugin: 'maven-publish'

// Primary dependencies definition
dependencies {
    implementation "com.google.guava:guava:$guava_version"
    implementation 'com.googlecode.gentyref:gentyref:1.2.0'
    implementation "org.slf4j:slf4j-api:$slf4j_version"
    implementation "com.android.support:support-annotations:$android_annotation_version"

    // These dependencies are only needed for running tests
    testImplementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation(platform("org.junit:junit-bom:$jupiter_version")) {
        // junit-bom will set version numbers for the other org.junit dependencies.
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.mockito:mockito-inline:$mockito_version")
    testImplementation("org.mockito:mockito-junit-jupiter:$mockito_version")
}

// Library and distribution config
description = 'Common utility classes'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.named("test", Test) {
    useJUnitPlatform()
}

/***
 * Publishing
 ***/

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven {
            credentials {
                username project.gestaltMavenRepoUsername
                password project.gestaltMavenRepoPassword
            }
            name 'TerasologyTestRepo'
            allowInsecureProtocol = true  // ðŸ˜±
            url project.version.endsWith('SNAPSHOT') ? project.snapshotPublishRepo : project.releasePublishRepo
        }
    }
    publications {
        mavenUtil(MavenPublication) {
            artifactId = project.name
            version = project.version

            from components.java

            artifact sourceJar
            artifact javadocJar
        }
    }
}

