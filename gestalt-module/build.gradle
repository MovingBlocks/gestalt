/*
 * Copyright 2019 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This is a Gradle build file:
 * - Gradle Homepage: http://gradle.org/
 * - Gradle Documentation: http://gradle.org/documentation
 * - View tasks for this project: $ gradlew tasks
 */

apply plugin: 'java-library'

// Primary dependencies definition
dependencies {
    implementation project(":gestalt-util")
    implementation 'com.google.guava:guava:27.0.1-android'
    api 'org.reflections:reflections:0.9.12-SNAPSHOT'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.apache.commons:commons-vfs2:2.2'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.android.support:support-annotations:28.0.0'

    testImplementation project(":testpack:testpack-api")
    testImplementation 'junit:junit:4.12'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.mockito:mockito-core:1.10.19'

}

// Library and distribution config
description = 'Provides support for modules - java libraries that can be activated at runtime and run in a sandboxed environment'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task gatherJarModules(dependsOn: [':testpack:moduleA:jar', ':testpack:moduleB:jar', ':testpack:moduleC:jar', ':testpack:moduleD:jar'], type: Copy)
task createModuleE(dependsOn: [':gestalt-module:copyModuleEInfo', ':gestalt-module:copyModuleELibs'])
task copyModuleELibs(dependsOn: [':testpack:moduleA:jar', ':testpack:moduleD:jar'], type: Copy)
task copyModuleEInfo(type: Copy)
task gatherModules(dependsOn: [':gestalt-module:gatherJarModules', ':gestalt-module:createModuleE'])

copyModuleELibs {
    from '../testpack/moduleA/build/libs'
    from '../testpack/moduleD/build/libs'
    into 'test-modules/moduleE/libs'
    include('*.jar')
}

copyModuleEInfo {
    from '../testpack/moduleE'
    into 'test-modules/moduleE'
    include('*.json')
}

gatherJarModules {
    from '../testpack/moduleA/build/libs/'
    from '../testpack/moduleB/build/libs/'
    from '../testpack/moduleC/build/libs/'
    from '../testpack/moduleD/build/libs/'
    into 'test-modules'
    include('*.jar')
}

test.dependsOn gatherModules

